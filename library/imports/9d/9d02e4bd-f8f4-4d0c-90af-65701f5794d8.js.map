{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Scripts\\Common/assets\\Scripts\\Common\\Util.ts"],"names":[],"mappings":";;;;;AAAA,mCAA8B;AAC9B,2CAAsC;AAEtC;;GAEG;AACG,IAAA,kBAAmD,EAAlD,oBAAO,EAAE,sBAAQ,EAAE,kCAAc,CAAkB;AAI1D;IAAkC,wBAAY;IAA9C;;IAkBA,CAAC;IAjBG,qBAAM,GAAN;QAEI,gBAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;IAChC,CAAC;IAEK,iCAAkB,GAAxB,UAAyB,KAAa,EAAE,YAA6B;QAA7B,6BAAA,EAAA,mBAA6B;;;;;4BAGnD,qBAAM,gBAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAA;;wBAA1E,OAAO,GAAG,SAAgE;wBAC1E,OAAO,GAAY,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;wBAE/C,uCAAuC;wBACvC,OAAO,CAAC,YAAY,CAAC,oBAAU,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;wBAE7D,cAAc;wBACd,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;;;;;KAC5C;IAjBgB,IAAI;QAFxB,OAAO;QACP,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,6CAA6C;OAC5C,IAAI,CAkBxB;IAAD,WAAC;CAlBD,AAkBC,CAlBiC,EAAE,CAAC,SAAS,GAkB7C;kBAlBoB,IAAI","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\Common","sourcesContent":["import Global from \"./Global\";\r\nimport FlexDialog from \"./FlexDialog\";\r\n\r\n/**\r\n * Functions/Tool that all can use, and depend with cocos creator \r\n */\r\nconst {ccclass, property, executionOrder} = cc._decorator;\r\n\r\n@ccclass\r\n@executionOrder(-1) //Make sure register to Instance in the first\r\nexport default class Util extends cc.Component{\r\n    onLoad()\r\n    {        \r\n        Global.Instance.misc = this;\r\n    }\r\n\r\n    async instanceFlexDialog(_text: string, _OK_callback: Function = null)\r\n    {    \r\n        //waite resource loading and instance\r\n        let _prefab = await Global.Instance.resources.getloadAssets(\"Template/Dialog\");\r\n        let newNode: cc.Node = cc.instantiate(_prefab);\r\n\r\n        //setup callback function when press OK\r\n        newNode.getComponent(FlexDialog).setupCallback(_OK_callback);\r\n\r\n        //Add to scene\r\n        cc.director.getScene().addChild(newNode);\r\n    }   \r\n}\r\n"]}