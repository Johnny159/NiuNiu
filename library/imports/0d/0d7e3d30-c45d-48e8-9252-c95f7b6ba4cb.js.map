{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\prefabs\\UIControllers/assets\\prefabs\\UIControllers\\VolumeControl.js"],"names":["ProgressBarWidth","mode","cc","Class","extends","Component","properties","SliderUI","default","type","Slider","progress","Sprite","PercentageText","RichText","EnableSprite","SpriteFrame","barEnableSprite","barDisableSprite","MuteBtn","Button","volume","setVolume","vol","mute","unmute","Display","onLoad","SlideEffect","MuteBtnControl","node","width","on","event","normalSprite","disabledSprite","spriteFrame","getVolume","getActualVolume","getMuteStatus","string","Math","floor"],"mappings":"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","file":"VolumeControl.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\prefabs\\UIControllers","sourcesContent":["var ProgressBarWidth = 0;\r\nvar mode = \"unmute\";\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        SliderUI: {//Slider����\r\n            default: null,\r\n            type: cc.Slider\r\n        },\r\n        progress: {//�i�ױ�����\r\n            default: null,\r\n            type: cc.Sprite\r\n        },\r\n        PercentageText: {//���q%��\r\n            default: null,\r\n            type: cc.RichText\r\n        },\r\n        EnableSprite: {//�R�����s�ҥζK��\r\n            default: null,\r\n            type: cc.SpriteFrame\r\n        },\r\n        barEnableSprite: {//�i�ױ�����K��\r\n            default: null,\r\n            type: cc.SpriteFrame\r\n        },\r\n        barDisableSprite: {//disable�i�ױ�����K��\r\n            default: null,\r\n            type: cc.SpriteFrame\r\n        },\r\n        MuteBtn: {//�R�����s����\r\n            default: null,\r\n            type: cc.Button\r\n        },\r\n        volume: 0,//���q\r\n    },\r\n    //�]�w���q��1~100\r\n    setVolume(vol) {\r\n        if (vol == 0) {\r\n            this.mute();\r\n        }\r\n        else {\r\n            this.unmute();\r\n            this.volume = vol;\r\n            this.Display()\r\n        }\r\n    },\r\n\r\n    onLoad() {\r\n\r\n        this.SlideEffect();\r\n        this.setVolume(this.volume);\r\n\r\n    },\r\n    MuteBtnControl() {//�R�����䱱��\r\n        if (this.mode == \"unmute\") {\r\n            this.mute();\r\n        }\r\n        else if (this.mode == \"mute\") {\r\n            this.unmute();\r\n        }\r\n    },\r\n    SlideEffect() {//Slider���󲾰ʰʵe\r\n        this.ProgressBarWidth = this.progress.node.width;\r\n        this.progress.node.width = this.ProgressBarWidth * this.SliderUI.progress;\r\n        this.SliderUI.node.on('slide', function (event) {\r\n            this.unmute();\r\n            this.Display();\r\n        }, this);\r\n    },\r\n    mute() {//�R��\r\n        this.MuteBtn.normalSprite = this.MuteBtn.disabledSprite;\r\n        this.progress.spriteFrame = this.barDisableSprite;\r\n        this.mode = \"mute\"\r\n    },\r\n    unmute() {//�����R��\r\n        this.volume = this.SliderUI.progress * 100;\r\n        this.MuteBtn.normalSprite = this.EnableSprite;\r\n        this.progress.spriteFrame = this.barEnableSprite;\r\n        this.mode = \"unmute\"\r\n    },\r\n    getVolume() {//�^�ǭ��q(���񭵮Į�Call)\r\n        if (this.mode != \"mute\") {\r\n            this.volume = this.SliderUI.progress * 100;\r\n            return this.volume / 100;\r\n        }\r\n        else\r\n            return 0;\r\n    },\r\n    getActualVolume() {//�^�ǹ�ڭ��q(for Unity Lobby)\r\n        return this.volume\r\n    },\r\n    getMuteStatus() {//�^���R�����A(for Unity Lobby)\r\n        if (this.mode == \"mute\")\r\n            return 0;\r\n        else\r\n            return 1;\r\n    },\r\n    Display() {//�P�B�i�ױ��P����%��\r\n        this.SliderUI.progress = this.volume / 100;\r\n        this.PercentageText.string = Math.floor(this.volume) + \"%\";\r\n        this.progress.node.width = this.SliderUI.progress * this.ProgressBarWidth;\r\n    }\r\n});\r\n"]}