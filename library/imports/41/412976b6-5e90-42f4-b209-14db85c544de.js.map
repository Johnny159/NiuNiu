{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Scripts\\Network/assets\\Scripts\\Network\\NetworkManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Scripts\\Network","sourcesContent":["import global from \"../Common/Global\";\r\n\r\nexport default class NetworkManager {\r\n    \r\n    private _socket;\r\n    //private serverURL:string = \"http://140.118.175.76:5070/\";\r\n    private serverURL:string = \"http://60.251.26.6:8073/\";\r\n    \r\n    private self = this;\r\n\r\n    ConnectServer() {\r\n        cc.log(\"con server\");\r\n        this._socket = io.connect(this.serverURL, {\r\n            reconnection: false\r\n        });\r\n        cc.log(\"connect success\");\r\n        this.eventRegister();\r\n    };\r\n\r\n    socket(){ return this._socket; }\r\n\r\n    LogIn(token:string){\r\n        let self = this;\r\n        let no:number = 6006;\r\n        let json= {\r\n            \"no\" : no,\r\n            \"data\" : token\r\n        };\r\n        console.log(\"token Reg : \"+ token);\r\n        this._socket.emit(\"action\",json ,function(data){\r\n            console.log(\"token callback : \"+JSON.stringify(data));\r\n            //req table after token register finish\r\n            let tableJson= {\r\n                \"no\" : 6001,\r\n                \"data\" : {\"oid\": 1}\r\n            };\r\n            console.log(\"table req:\"+tableJson); \r\n            self._socket.emit(\"action\",tableJson ,function(tableData){\r\n                console.log(\"table req callback: \"+JSON.stringify(tableData));\r\n            })\r\n        })\r\n\r\n       \r\n    }\r\n\r\n    eventRegister(){\r\n        //socket event listener\r\n        this._socket.on(\"SwitchScene\", function (SceneIndex) {\r\n            //cc.log(\"get switch scene req\");\r\n            global.Instance.EventListener.notify(\"SwitchScene\", SceneIndex);\r\n        });\r\n\r\n        this._socket.on(\"roomReady\", function (Info) {\r\n            //cc.log(\"network get : \", Info);\r\n            global.Instance.EventListener.notify(\"roomReady\", Info);\r\n        });\r\n\r\n        this._socket.on(\"stageChange\", function (stage, timeout) {\r\n            global.Instance.EventListener.notify(\"stageChange\", stage, timeout);\r\n        });\r\n\r\n        this._socket.on(\"stageChange\", function (stage, timeout) {\r\n            global.Instance.EventListener.notify(\"stageChange\", stage, timeout);\r\n        });\r\n\r\n        this._socket.on(\"action\", function (data) {\r\n            console.log(\"action : \" + JSON.stringify(data));\r\n        });\r\n\r\n        this._socket.on(\"response\", function (data) {\r\n            console.log(\"response : \" + JSON.stringify(data));\r\n        });\r\n\r\n        this._socket.on(\"kingsRate\", function (Info) {\r\n            //cc.log(\"Network get kingsRate\");\r\n            global.Instance.EventListener.notify(\"kingsRate\", Info);\r\n        });\r\n\r\n        this._socket.on(\"playersRate\", function (Info) {\r\n            //cc.log(\"Network get playersRate\");\r\n            global.Instance.EventListener.notify(\"playersRate\", Info);\r\n        });\r\n        this._socket.on(\"myCard\", function (Info) {\r\n            global.Instance.EventListener.notify(\"myCard\", Info);\r\n\r\n        });\r\n        this._socket.on(\"eachPlayerCard\", function (Info) {\r\n            global.Instance.EventListener.notify(\"eachPlayerCard\", Info);\r\n\r\n        });\r\n        this._socket.on(\"pokerAnimation\", function (Info) {\r\n            global.Instance.EventListener.notify(\"pokerAnimation\", Info);\r\n        });\r\n\r\n        this._socket.on(\"Animation\", function (animationName) {\r\n            global.Instance.EventListener.notify(\"Animation\", animationName);\r\n        });\r\n\r\n        this._socket.on(\"moneyFlow\", function (Info) {\r\n            global.Instance.EventListener.notify(\"moneyFlow\", Info);\r\n        });\r\n        \r\n\r\n    }\r\n    \r\n\r\n}\r\n"]}