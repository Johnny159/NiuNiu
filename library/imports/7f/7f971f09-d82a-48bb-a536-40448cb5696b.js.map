{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\Scripts\\Home\\Player/assets\\Scripts\\Home\\Player\\PlayerInfoViewController.ts"],"names":[],"mappings":";;;;;AAAC,8CAAyC;AAC1C,mCAAqC;AAC/B,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAE5C,IAAK,MAMJ;AAND,WAAK,MAAM;IACP,uCAAU,CAAA;IACV,iCAAG,CAAA;IACH,+BAAE,CAAA;IACF,mCAAI,CAAA;IACJ,2CAAQ,CAAA;AACZ,CAAC,EANI,MAAM,KAAN,MAAM,QAMV;AAGD;IAAsD,4CAAY;IADlE;QAAA,qEAsIC;QAnIG,MAAM;QACN,uEAAuE;QAC/D,gBAAU,GAAQ,IAAI,CAAC;QACvB,kBAAY,GAAG,EAAE,CAAC;QAClB,iBAAW,GAAQ,CAAC,0BAA0B,EAAE,0BAA0B,EAAE,0BAA0B,EAAE,0BAA0B,EAAE,0BAA0B,EAAE,0BAA0B,CAAC,CAAC;QAGpM,uEAAuE;QAEvE,UAAU;QACV,kDAAkD;QAElD,aAAO,GAAc,EAAE,CAAC;QAExB,mDAAmD;QACnD;oCAC4B;QAG5B,iBAAW,GAAY,IAAI,CAAC;;QA8D5B,2BAA2B;QAC3B,4BAA4B;QAC5B,uBAAuB;QAEvB,4BAA4B;QAE5B,wDAAwD;QACxD,+DAA+D;QAC/D,iEAAiE;QACjE,qEAAqE;QACrE,yEAAyE;QAGzE,wDAAwD;QACxD,+DAA+D;QAC/D,iEAAiE;QACjE,qEAAqE;QACrE,yEAAyE;QAEzE,qCAAqC;QACrC,+GAA+G;QAE/G,wDAAwD;QACxD,cAAc;QAGd,sCAAsC;QACtC,gHAAgH;QAChH,8DAA8D;QAC9D,cAAc;QAGd,uCAAuC;QACvC,iHAAiH;QACjH,+DAA+D;QAC/D,cAAc;QAEd,yCAAyC;QACzC,mHAAmH;QACnH,iEAAiE;QACjE,cAAc;QAGd,2CAA2C;QAC3C,qHAAqH;QACrH,mEAAmE;QACnE,cAAc;QAGd,IAAI;IACR,CAAC;iCArIoB,wBAAwB;IA0BzC,sBAAW,gCAAI;aAAf;YACI,IAAG,CAAC,0BAAwB,CAAC,IAAI,EAAC;gBAC9B,0BAAwB,CAAC,IAAI,GAAG,IAAI,0BAAwB,EAAE,CAAC;aAClE;YACD,OAAO,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;;;OAAA;IAED,2CAAQ,GAAR;QACI,gBAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACrD,CAAC;IAED,yCAAM,GAAN;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB;;;;;;UAME;QAEF,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,eAAe,EAAE,UAAU,GAAG,EAAE,MAAM,IAAI,CAAC,CAAC,CAAC;QAElE;;;;;aAKK;IACT,CAAC;IAED,uCAAI,GAAJ;QACI,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;gCACxC,KAAK;YACT,EAAE,CAAC,GAAG,CAAC,YAAY,GAAG,KAAK,GAAG,OAAK,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YACnD,EAAE,CAAC,GAAG,CAAC,aAAa,GAAG,OAAK,OAAO,CAAC,CAAC;YAErC,OAAK,YAAY,CAAC,KAAK,CAAC,GAAG,OAAK,OAAO,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YAEtE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,OAAK,WAAW,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,WAAW,EAAE,UAAU,GAAG,EAAE,WAAW;gBAClH,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YACjD,CAAC,CAAC,CAAC;QACP,CAAC;;QATD,KAAI,IAAI,KAAK,GAAG,CAAC,EAAC,KAAK,GAAE,IAAI,CAAC,WAAW,EAAC,KAAK,EAAE;oBAAzC,KAAK;SASZ;IACL,CAAC;IAED,+CAAY,GAAZ;QACI,KAAI,IAAI,KAAK,GAAG,CAAC,EAAC,KAAK,GAAE,IAAI,CAAC,WAAW,EAAC,KAAK,EAAE,EAAC;YAC9C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC;YACvE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;SAC3E;IACL,CAAC;IAED,gDAAa,GAAb,UAAc,OAAO;QACjB,oDAAoD;IACxD,CAAC;;IA3DD,mDAAmD;IAEpC,6BAAI,GAA6B,IAAI,CAAC;IAVrD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;6DACM;IAOxB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;iEACU;IArBX,wBAAwB;QAD5C,OAAO;OACa,wBAAwB,CAqI5C;IAAD,+BAAC;CArID,AAqIC,CArIqD,EAAE,CAAC,SAAS,GAqIjE;kBArIoB,wBAAwB","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Scripts\\Home\\Player","sourcesContent":["ï»¿import global from \"../../Common/Global\";\r\nimport * as NN from \"../../NNDefine\";\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nenum player{\r\n    prepre = 0,\r\n    pre,\r\n    me,\r\n    next,\r\n    nextnext\r\n}\r\n\r\n@ccclass\r\nexport default class PlayerInfoViewController extends cc.Component {\r\n\r\n    //ctor\r\n    //=====================================================================\r\n    private playerInfo: any = null; \r\n    private playerScript = [];\r\n    private defaultImgs: any = [\"newnew/common/playerPic1\", \"newnew/common/playerPic2\", \"newnew/common/playerPic3\", \"newnew/common/playerPic4\", \"newnew/common/playerPic5\", \"newnew/common/playerPic6\"];\r\n    private autoPlaying: cc.Node;\r\n    private playerCount: number;\r\n    //=====================================================================\r\n\r\n    //property\r\n    //================================================\r\n    @property(cc.Node)\r\n    players: cc.Node[] = [];\r\n\r\n    // IF WANT TO CHANGE TO ARRAY, HERE IS THE SOLUTION\r\n    /*@property(cc.Node)\r\n    fiveRival: cc.Node[] = [];*/\r\n\r\n    @property(cc.Node)\r\n    Autoplaying: cc.Node = null;\r\n    //=================================================\r\n\r\n    private static inst: PlayerInfoViewController = null;\r\n\r\n    static get Inst(): PlayerInfoViewController{\r\n        if(!PlayerInfoViewController.inst){\r\n            PlayerInfoViewController.inst = new PlayerInfoViewController();\r\n        }\r\n        return this.inst;\r\n    }\r\n\r\n    autoPlay() {\r\n        global.Instance.EventListener.notify(\"AIswitch\");\r\n    }\r\n\r\n    onLoad() {\r\n        let self = this;\r\n\r\n        /*\r\n        this.playerScript.PreRival = this.PreRival.getComponent(\"Player\");\r\n        this.playerScript.Me = this.Me.getComponent(\"Player\");\r\n        this.playerScript.NextRival = this.NextRival.getComponent(\"Player\");\r\n        this.playerScript.PrePreRival = this.PrePreRival.getComponent(\"Player\");\r\n        this.playerScript.NextNextRival = this.NextNextRival.getComponent(\"Player\");\r\n        */\r\n\r\n        cc.loader.loadResDir(\"newnew/common\", function (err, assets) { });\r\n\r\n        /*global.Instance.EventListener.on(\"roomReady\", function (event, Info) {\r\n            //cc.log(\"roomReady in PlayerInfoViewCtrlr\");\r\n            //cc.log(\"piv get \", Info);\r\n            self.UpdateRoom(Info);\r\n            //cc.log(\"RoomReady in Player Done\");\r\n        });*/\r\n    }\r\n\r\n    init(){\r\n        this.playerCount = NN.GameInfo.Inst.playerCount;\r\n        for(let index = 0;index< this.playerCount;index++){\r\n            cc.log(\"get player\" + index + this.players[index]);\r\n            cc.log(\"all] player\" + this.players);\r\n            \r\n            this.playerScript[index] = this.players[index].getComponent(\"Player\");\r\n\r\n            cc.loader.loadRes(this.defaultImgs[NN.GameInfo.Inst.players[index].iconID], cc.SpriteFrame, function (err, spriteFrame) {\r\n                this.playerScript[index].setImg(spriteFrame);\r\n            });\r\n        }\r\n    }\r\n\r\n    updatePlayer(){\r\n        for(let index = 0;index< this.playerCount;index++){\r\n            this.playerScript[index].setName(NN.GameInfo.Inst.players[index].name);\r\n            this.playerScript[index].setCoin(NN.GameInfo.Inst.players[index].money);\r\n        }\r\n    }\r\n\r\n    showKingAnime(kingUID) {\r\n        //this.Me.getChildByName(\"dizhuIcon\").active = true;\r\n    }\r\n\r\n    // UpdateRoom(playerInfo) {\r\n    //     cc.log(\"updateRoom\");\r\n    //     let self = this;\r\n\r\n    //     //cc.log(playerInfo);\r\n        \r\n    //     this.playerScript.Me.setName(playerInfo.Me.name);\r\n    //     this.playerScript.PreRival.setName(playerInfo.Pre.name);\r\n    //     this.playerScript.NextRival.setName(playerInfo.Next.name);\r\n    //     this.playerScript.PrePreRival.setName(playerInfo.PrePre.name);\r\n    //     this.playerScript.NextNextRival.setName(playerInfo.NextNext.name);\r\n\r\n\r\n    //     this.playerScript.Me.setCoin(playerInfo.Me.coin);\r\n    //     this.playerScript.PreRival.setCoin(playerInfo.Pre.coin);\r\n    //     this.playerScript.NextRival.setCoin(playerInfo.Next.coin);\r\n    //     this.playerScript.PrePreRival.setCoin(playerInfo.PrePre.coin);\r\n    //     this.playerScript.NextNextRival.setCoin(playerInfo.NextNext.coin);\r\n\r\n    //     if (playerInfo.Me.img != null)\r\n    //         cc.loader.loadRes(this.defaultImgs[playerInfo.Me.img], cc.SpriteFrame, function (err, spriteFrame) {\r\n\r\n    //             self.playerScript.Me.setImg(spriteFrame);\r\n    //         });\r\n\r\n\r\n    //     if (playerInfo.Pre.img != null)\r\n    //         cc.loader.loadRes(this.defaultImgs[playerInfo.Pre.img], cc.SpriteFrame, function (err, spriteFrame) {\r\n    //             self.playerScript.PreRival.setImg(spriteFrame);\r\n    //         });\r\n\r\n\r\n    //     if (playerInfo.Next.img != null)\r\n    //         cc.loader.loadRes(this.defaultImgs[playerInfo.Next.img], cc.SpriteFrame, function (err, spriteFrame) {\r\n    //             self.playerScript.NextRival.setImg(spriteFrame);\r\n    //         });\r\n\r\n    //     if (playerInfo.PrePre.img != null)\r\n    //         cc.loader.loadRes(this.defaultImgs[playerInfo.PrePre.img], cc.SpriteFrame, function (err, spriteFrame) {\r\n    //             self.playerScript.PrePreRival.setImg(spriteFrame);\r\n    //         });\r\n\r\n\r\n    //     if (playerInfo.NextNext.img != null)\r\n    //         cc.loader.loadRes(this.defaultImgs[playerInfo.NextNext.img], cc.SpriteFrame, function (err, spriteFrame) {\r\n    //             self.playerScript.NextNextRival.setImg(spriteFrame);\r\n    //         });\r\n\r\n\r\n    // }\r\n}\r\n"]}